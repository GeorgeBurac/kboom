#!/usr/bin/env bash

set -e


function genload {
namespace=$1
mode=$2
load=$3

# echo using namespace=\"$namespace\", mode \"$mode\", and load \"$load\"

tmpdir=$(mktemp -d)

cat <<EOF >> ${tmpdir}/kboom-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kboom
spec:
  template:
    spec:
      serviceAccountName: kboom-sa
      containers:
      - name: kboom
        image: 661776721573.dkr.ecr.us-east-2.amazonaws.com/kboom:latest
        command:
        - "/kboom"
        - "--namespace=$namespace"
        - "--mode=$mode"
        - "--load=$load"
      restartPolicy: Never
EOF

# cat ${tmpdir}/kboom-job.yaml

kubectl apply -f ${tmpdir}/kboom-job.yaml
}


################################################################################
### PARAMETERS #################################################################

command="${1:-results}"  
namespace="kboom"
mode="scale:20"
load="pods:1"

################################################################################
### MAIN #######################################################################

while [ $# -gt 0 ]; do
  case "$1" in
    --namespace=*)
      namespace="${1#*=}"
      ;;
    --mode=*)
      mode="${1#*=}"
      ;;
    --load=*)
      load="${1#*=}"
      ;;
  esac
  shift
done


case $command in
generate)
  genload $namespace $mode $load
  ;;
results)
  kubectl logs job/kboom
  ;;
cleanup)
  kubectl delete job/kboom
  ;;
*)
  printf "The [$COMMAND] command is not supported! Use 'generate' to generate some load, 'results' to view the results, or 'cleanup' to clean up all resources.\n"
esac

